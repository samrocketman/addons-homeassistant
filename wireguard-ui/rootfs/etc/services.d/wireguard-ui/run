#!/usr/bin/with-contenv bashio
# shellcheck disable=SC2191
# ==============================================================================
# Home Assistant Community Add-on: Wireguard UI
# Runs the Wireguard UI
# ==============================================================================

# auto-export environment variables
declare default_nic
declare dns
declare endpoint
declare port

bashio::log.info 'Starting Wireguard UI...'

default_nic=$(ip route | grep default | awk '{print $5}')
dns=$(bashio::config 'dns')
endpoint=$(bashio::config 'endpoint')
port=$(bashio::addon.port '51820/udp')

# daemon restarts wg interface on modification
iface_addr() { awk '$1 == "[Interface]" {iface=1; next}; iface == 1 && $1 == "Address" {print $3; exit}' /etc/wireguard/wg0.conf | tr ',' '\n'; }
clear_nats() { iptables-save | grep -F -- '-j MASQUERADE' | sed 's/^-A/-D/' | tr '\n' '\0' | xargs -0 -I{} /bin/bash -c 'iptables -t nat {}'; }
nat_ip_ranges() { iface_addr | xargs -I {} iptables -t nat -A POSTROUTING -s '{}' -o eth0 -j MASQUERADE; }
refresh_wireguard() {
  wg-quick down wg0 || true
  wg-quick up wg0
  clear_nats
  nat_ip_ranges
}
while true; do
  if [ ! -f /tmp/wg_initialized ]; then
    if [ -f /etc/wireguard/wg0.conf ]; then
      refresh_wireguard
      touch /tmp/wg_initialized
    fi
  elif [ -f /etc/wireguard/wg0.conf ] && inotifywait -e modify /etc/wireguard/wg0.conf; then
    refresh_wireguard
  fi
  sleep 1;
done &

# Run wireguard-ui
# wireguard-ui creates databases in `./db`
# /data is a persistent path in the container
cd /data

# customizations from home assistant
WGUI_DEFAULT_CLIENT_ALLOWED_IPS="0.0.0.0/0,::/0"
WGUI_DNS="${dns:-1.1.1.1}"
WGUI_ENDPOINT_ADDRESS="${endpoint}:${port%/*}"
WGUI_LOG_LEVEL=debug
WGUI_SERVER_LISTEN_PORT="${port%/*}"
export WGUI_DEFAULT_CLIENT_ALLOWED_IPS WGUI_DNS WGUI_ENDPOINT_ADDRESS WGUI_LOG_LEVEL WGUI_SERVER_LISTEN_PORT
exec /wireguard-ui \
  -disable-login \
  -bind-address "127.0.0.1:8080"
#    --auth-user-header=X-Hass-User-ID                   \
#    --nat-device=${default_nic}                         \
