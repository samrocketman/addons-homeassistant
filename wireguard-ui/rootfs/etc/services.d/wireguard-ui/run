#!/usr/bin/with-contenv bashio
# shellcheck disable=SC2191
# ==============================================================================
# Home Assistant Community Add-on: Wireguard UI
# Runs the Wireguard UI
# ==============================================================================

declare default_nic
declare dns
declare endpoint
declare port

bashio::log.info 'Starting Wireguard UI...'

dns=$(bashio::config 'default_client_dns')
endpoint=$(bashio::config 'default_client_endpoint')
port=$(bashio::addon.port '51820/udp')
single_user=$(bashio::config 'single_user_mode') 

# Run wireguard-ui
# wireguard-ui creates databases in `./db`
# /data is a persistent path in the container
cd /data
# missing state dir causes login loops
[ -d db ] || mkdir db
if [ ! -f session-key ] || [ -z "$(<session-key)"]; then
  uuidgen > session-key
  echo "Generated session key" >&2
fi
export SESSION_SECRET_FILE=session-key
# customizations from home assistant
WGUI_DEFAULT_CLIENT_ALLOWED_IPS="0.0.0.0/0,::/0"
WGUI_DNS="${dns:-1.1.1.1}"
WGUI_ENDPOINT_ADDRESS="${endpoint}:${port%/*}"
WGUI_LOG_LEVEL=debug
WGUI_MTU=1420
WGUI_SERVER_LISTEN_PORT="${port%/*}"
export WGUI_DEFAULT_CLIENT_ALLOWED_IPS WGUI_DNS WGUI_ENDPOINT_ADDRESS
export WGUI_LOG_LEVEL WGUI_MTU WGUI_SERVER_LISTEN_PORT
wgui_args=( -bind-address "127.0.0.1:8080" )
if [ "${single_user:-}" = true ]; then
  wgui_args+=( -disable-login )
fi
exec /wireguard-ui "${wgui_args[@]}"
