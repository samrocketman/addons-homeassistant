#
# Wireguard UI has multiple session cookies.
#
# Home Assistant ingress endpoints support only a single Set-Cookie header.
#   https://github.com/home-assistant/supervisor/issues/4290
#
# Backend to frontend
#   The following map and cookie configs read cookies from backend and combine
#   them into a single Set-Cooke before sending to client through frontend.
#
# Frontend to backend
#   When client sends back the combined cookie the cookies are then split up
#   again before being sent to backend.

# Map to combine wgui_ prefixed session cookies into wgui_super_session (from backend to frontend)
map $upstream_http_set_cookie $wgui_session {
    "~wgui_session=([^;]+)" "$1";
    default '';
}
map $upstream_http_set_cookie $wgui_session_token {
    "~wgui_session_token=([^;]+)" "$1";
    default '';
}
map "$wgui_session_token:$wgui_session" $wgui_super_session {
    "~^([^:]+:[^:]+)$" "wgui_super_session=$1; Path=/api/hassio_ingress/; HttpOnly; SameSite=Lax";
    default '';
}

# Maps to break up the combined cookie (from frontend to backend)
map $http_cookie $wgui_session_token_cookie {
    "~*wgui_super_session=([^:]+):" "wgui_session_token=$1";
    default '';
}
map $http_cookie $wgui_session_cookie {
    "~*wgui_super_session=[^:]+:([^;]+)" "wgui_session=$1";
    default '';
}
# both cookies or no cookie
map "$wgui_session_token_cookie; $wgui_session_cookie" $wgui_multiple_cookies {
  "~^(wgui_session_token=[^;]+; wgui_session=.+)$" $1;
  default '';
}

server {
    listen %%interface%%:8099 default_server;

    include /etc/nginx/includes/server_params.conf;
    include /etc/nginx/includes/proxy_params.conf;

    location / {
        allow   172.30.32.2;
        deny    all;

        # Login sessions
        # Remove all Set-Cookie headers from upstream
        proxy_hide_header Set-Cookie;
        # Set only our combined cookie
        add_header Set-Cookie $wgui_super_session;
        # send the broken up wgui cookies to backend
        proxy_set_header Cookie $wgui_multiple_cookies;

        # https://github.com/EmbarkStudios/wg-ui/issues/94
        sub_filter_types *;
        sub_filter_once off;
        sub_filter 'O.p="/"'  "O.p=\"$http_x_ingress_path/\"";
        sub_filter 'href="/'  "href=\"$http_x_ingress_path/";
        sub_filter 'href:"/'  "href:\"$http_x_ingress_path/";
        sub_filter 'src="/'  "src=\"$http_x_ingress_path/";
        sub_filter '/api' "$http_x_ingress_path/api";
        sub_filter 'path:"' "path:\"$http_x_ingress_path/";
        sub_filter '"/new-client"' "\"$http_x_ingress_path/new-client\"";
        sub_filter '"/client/"' "\"$http_x_ingress_path/client/\"";
        sub_filter '"/",{replace' "\"$http_x_ingress_path/\",{replace";
        # added since converting this addon to https://github.com/ngoduykhanh/wireguard-ui
        sub_filter 'url: \'/' "url: '$http_x_ingress_path/";
        sub_filter 'url: "/' "url: \"$http_x_ingress_path/";
        # login pages and redirects
        proxy_redirect ~^(\/[^?]+)(\?next=)\/(.*)$ "$http_x_ingress_path$1$2$http_x_ingress_path/$3";
        proxy_redirect / "$http_x_ingress_path/";
        absolute_redirect off;

        proxy_pass http://backend/;
    }
}
