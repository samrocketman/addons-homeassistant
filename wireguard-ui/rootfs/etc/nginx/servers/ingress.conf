server {
    listen %%interface%%:8099 default_server;

    include /etc/nginx/includes/server_params.conf;
    include /etc/nginx/includes/proxy_params.conf;

    location / {
        allow   172.30.32.2;
        deny    all;

        # X-Hass-User-ID
        proxy_set_header X-Hass-User-ID "Home Assistant";
        proxy_set_header Cookie $http_cookie;
        #proxy_set_header Host $host;
        #proxy_pass_header  Set-Cookie;

        # https://github.com/EmbarkStudios/wg-ui/issues/94
        sub_filter_types *;
        sub_filter_once off;
        sub_filter 'O.p="/"'  "O.p=\"$http_x_ingress_path/\"";
        sub_filter 'href="/'  "href=\"$http_x_ingress_path/";
        sub_filter 'href:"/'  "href:\"$http_x_ingress_path/";
        sub_filter 'src="/'  "src=\"$http_x_ingress_path/";
        sub_filter '/api' "$http_x_ingress_path/api";
        sub_filter 'path:"' "path:\"$http_x_ingress_path/";
        sub_filter '"/new-client"' "\"$http_x_ingress_path/new-client\"";
        sub_filter '"/client/"' "\"$http_x_ingress_path/client/\"";
        sub_filter '"/",{replace' "\"$http_x_ingress_path/\",{replace";
        # added since converting this addon to https://github.com/ngoduykhanh/wireguard-ui
        sub_filter 'url: \'/' "url: '$http_x_ingress_path/";
        sub_filter 'url: "/' "url: \"$http_x_ingress_path/";
        # login pages and redirects
        proxy_redirect ~^(\/[^?]+)(\?next=)\/(.*)$ "$http_x_ingress_path$1$2$http_x_ingress_path/$3";
        proxy_redirect / "$http_x_ingress_path/";
        #proxy_cookie_path / "/api/hassio_ingress/; Secure";
        absolute_redirect off;

        proxy_pass http://backend/;
    }
}
